name: Microservices CI/CD ‚Üí Docker Hub + EC2

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  NACOS_ADDR: "localhost:8848"
  # CodeArtifact ÈÖçÁΩÆ
  CODEARTIFACT_DOMAIN: "magic-bag"
  CODEARTIFACT_REPO: "magic_bag"
  CODEARTIFACT_OWNER: "838811708767"
  AWS_REGION: "ap-southeast-1"

jobs:
  deploy:
    name: Deploy ${{ matrix.service.name }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service:
          - { name: "magic-bag-gateway",   port: "10016", dir: "magic-bag-gateway" }
          - { name: "magic-bag-auth",      port: "10017", dir: "magic-bag-auth" }
          - { name: "magic-bag-user",      port: "10018", dir: "magic-bag-user" }
          - { name: "magic-bag-product",   port: "10019", dir: "magic-bag-product" }
          - { name: "magic-bag-order",     port: "10020", dir: "magic-bag-order" }
          - { name: "magic-bag-payment",   port: "10021", dir: "magic-bag-payment" }
          - { name: "magic-bag-cart",      port: "10022", dir: "magic-bag-cart" }
          - { name: "magic-bag-merchant",  port: "10023", dir: "magic-bag-merchant" }
          - { name: "magic-bag-admin",     port: "10024", dir: "magic-bag-admin" }

    steps:
      - name: üì• Checkout
        uses: actions/checkout@v4

      - name: ‚öôÔ∏è Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: üîë Generate CodeArtifact settings.xml
        run: |
          # Ëé∑ÂèñÊéàÊùÉ token
          TOKEN=$(aws codeartifact get-authorization-token \
            --domain ${{ env.CODEARTIFACT_DOMAIN }} \
            --domain-owner ${{ env.CODEARTIFACT_OWNER }} \
            --region ${{ env.AWS_REGION }} \
            --query authorizationToken --output text)

          # ÂàõÂª∫ .m2 ÁõÆÂΩïÂπ∂ÂÜôÂÖ• settings.xml
          mkdir -p .m2
          cat > .m2/settings.xml << EOF
          <settings>
            <servers>
              <server>
                <id>codeartifact</id>
                <username>aws</username>
                <password>${TOKEN}</password>
              </server>
            </servers>
            <profiles>
              <profile>
                <id>default</id>
                <repositories>
                  <repository>
                    <id>codeartifact</id>
                    <url>https://magic-bag-838811708767.d.codeartifact.ap-southeast-1.amazonaws.com/maven/magic_bag/</url>
                  </repository>
                </repositories>
              </profile>
            </profiles>
            <activeProfiles>
              <activeProfile>default</activeProfile>
            </activeProfiles>
          </settings>
          EOF

      - name: ‚öôÔ∏è Setup JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'maven'

      - name: üß™ Test
        run: |
          cd ${{ matrix.service.dir }}
          mvn -B test -s ../../.m2/settings.xml

      - name: üê≥ Build Docker Image
        run: |
          docker build \
            --build-arg SERVICE_NAME=${{ matrix.service.dir }} \
            --build-arg APP_PORT=${{ matrix.service.port }} \
            --build-arg TZ=Asia/Singapore \
            -t ${{ secrets.DOCKERHUB_USERNAME }}/${{ matrix.service.name }}:latest .

      - name: üö™ Docker Login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: üì§ Push Image
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ matrix.service.name }}:latest

      - name: üì° Deploy to EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
            docker stop ${{ matrix.service.name }} || true
            docker rm ${{ matrix.service.name }} || true
            docker run -d \
              --name ${{ matrix.service.name }} \
              -p ${{ matrix.service.port }}:${{ matrix.service.port }} \
              -v /home/${{ secrets.EC2_USER }}/.keys:/app/.keys:ro \
              -e SPRING_CLOUD_NACOS_CONFIG_SERVER_ADDR=${{ env.NACOS_ADDR }} \
              -e SPRING_CLOUD_NACOS_DISCOVERY_SERVER_ADDR=${{ env.NACOS_ADDR }} \
              -e SPRING_PROFILES_ACTIVE=dev \
              ${{ secrets.DOCKERHUB_USERNAME }}/${{ matrix.service.name }}:latest